class(g1)
g1[1]
hist(g1$steps,main=" ",xlab="date",ylab="frequency",col="red")
g1$steps
g1[2]
hist(g1,main=" ",xlab="date",ylab="frequency",col="red")
hist(g1[1],main=" ",xlab="date",ylab="frequency",col="red")
class(g1[1])
g1[1,1]
class(g1[1,1])
class(g1[,1])
echo = TRUE  # Always make code visible
options(scipen = 1)  # Turn off scientific notations for numbers
data <- read.csv("C:/Users/ANUBHAV/Downloads/repdata-data-activity/activity.csv", header=T, quote="\"",colClasses= c("numeric", "Date", "factor"))
data_noNA<-na.omit(data)
g1<-tapply(data_noNA$steps,data_noNA$date,FUN=sum)
g1<-data.frame(g1)
g1[1]
g1[1,1]
class(g[1,1])
class(g1[1,1])
class(g1[,1])
hist(g1[,1],main=" ",xlab="date",ylab="frequency",col="red")
hist(g1[,1],break=10,main=" ",xlab="Total Number of Steps Taken Daily",col="red")
hist(g1[,1],breaks=10,main=" ",xlab="Total Number of Steps Taken Daily",col="red")
hist(g1[,1],breaks=15,main=" ",xlab="Total Number of Steps Taken Daily",col="red")
hist(g1[,1],breaks=20,main=" ",xlab="Total Number of Steps Taken Daily",col="red")
hist(g1[,1],breaks=20,main=" ",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
mean(g1)
mean(g1[,1])
median(g1[,1])
aggregate(data_noNA$steps~data_noNA$date,data=data_noNA,FUN=mean)
aggregate(data_noNA$steps~data_noNA$date,data=data_noNA,FUN=sum)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
tapply(data_noNA$steps,data_noNA$date,FUN=mean)
tapply(data_noNA$steps,data_noNA$date,FUN=sum)
library(plyr)
# Calculate average steps for each of 5-minute interval during a 24-hour period
interval.mean.steps <- ddply(data.ignore.na,~interval, summarise, mean=mean(steps))
library(plyr)
# Calculate average steps for each of 5-minute interval during a 24-hour period
interval.mean.steps <- ddply(data_noNA,~interval, summarise, mean=mean(steps))
interval.mean.steps
as.data.frame(tapply(data_noNA$steps,data_noNA$interval,FUN=mean))
g1<-as.data.frame(tapply(data_noNA$steps,data_noNA$date,FUN=mean))
#aggregate(data_noNA$steps~data_noNA$date,data=data_noNA,FUN=sum)
hist(g1[,1],breaks=20,main=" ",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
g1<-as.data.frame(tapply(data_noNA$steps,data_noNA$date,FUN=mean))
#aggregate(data_noNA$steps~data_noNA$date,data=data_noNA,FUN=sum)
hist(g1[,1],breaks=10,main=" ",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
g1
max(g1)
g<-as.data.frame(tapply(data_noNA$steps,data_noNA$date,FUN=sum))
g1<-as.data.frame(tapply(data_noNA$steps,data_noNA$date,FUN=mean))
#aggregate(data_noNA$steps~data_noNA$date,data=data_noNA,FUN=sum)
hist(g1[,1],breaks=20,main=" ",xlab="Total Mean of Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
g<-as.data.frame(tapply(data_noNA$steps,data_noNA$date,FUN=sum))
g1<-as.data.frame(tapply(data_noNA$steps,data_noNA$date,FUN=mean))
#aggregate(data_noNA$steps~data_noNA$date,data=data_noNA,FUN=sum)
hist(g1[,1],breaks=10,main=" ",xlab="Total Mean of Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
mean(g[,1])
median(g[,1])
g2<-as.data.frame(tapply(data_noNA$steps,data_noNA$interval,FUN=mean))
g1<-as.data.frame(tapply(data_noNA$steps,data_noNA$date,FUN=sum))
#aggregate(data_noNA$steps~data_noNA$date,data=data_noNA,FUN=sum)
hist(g1[,1],breaks=10,main=" ",xlab="Total Mean of Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
g1<-as.data.frame(tapply(data_noNA$steps,data_noNA$date,FUN=sum))
#aggregate(data_noNA$steps~data_noNA$date,data=data_noNA,FUN=sum)
hist(g1[,1],breaks=20,main=" ",xlab="Total Mean of Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
mean(g1[,1])
median(g1[,1])
g2<-as.data.frame(tapply(data_noNA$steps,data_noNA$interval,FUN=mean))
plot(data_noNA$interval, data_noNA$steps, type="l",ylab = "No. of steps", xlab = "5-minute interval")
plot(data_noNA$interval, data_noNA$steps, type="1",ylab = "No. of steps", xlab = "5-minute interval")
plot(as.numeric(as.character(data_noNA$interval)), data_noNA$steps, type="1",ylab = "No. of steps", xlab = "5-minute interval")
plot(as.numeric(as.character(data_noNA$interval)), data_noNA$steps, type="l",ylab = "No. of steps", xlab = "5-minute interval")
g2
g1<-as.data.frame(tapply(data_noNA$steps,data_noNA$date,FUN=sum))
#aggregate(data_noNA$steps~data_noNA$date,data=data_noNA,FUN=sum)
hist(g1[,1],breaks=20,main=" ",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
g2<-as.data.frame(tapply(data_noNA$steps,data_noNA$interval,FUN=mean))
names(g2)
g2<-aggregate(data_noNA$steps~data_noNA$interval,data=data_noNA,FUN=mean)
g2
g2<-aggregate(data_noNA$steps~as.numeric(data_noNA$interval),data=data_noNA,FUN=mean)
g2
g2<-aggregate(data_noNA$steps~as.numeric(as.character(data_noNA$interval)),data=data_noNA,FUN=mean)
g2
g2<-as.data.frame(tapply(data_noNA$steps,data_noNA$interval,FUN=mean))
g2
g2<-aggregate(data_noNA$steps~as.numeric(as.character(data_noNA$interval)),data=data_noNA,FUN=mean)
names(g2)
g2<-aggregate(data_noNA$steps~as.numeric(as.character(data_noNA$interval)),data=data_noNA,FUN=mean)
#g2<-as.data.frame(tapply(data_noNA$steps,data_noNA$interval,FUN=mean))
names(g2)<-c("interval","steps")
g2
plot(g2$interval, g2$steps, type="l",ylab = "No. of steps", xlab = "5-minute interval")
hist(g1[,1],breaks=20,main=" ",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
g1
hist(g1[,1],breaks=10,main=" ",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
hist(g1[,1],breaks=20,main=" ",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
hist(g1[,1],breaks=100,main=" ",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
hist(g1[,1],breaks=20,main=" ",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
g2
head(g2)
g2[max(g2$steps),interval]
g2[max(g2$steps),g2$interval]
g2[max(g2$steps),]
g2[max(g2$steps),1]
g2[max(g2$steps),g2[interval]]
g2[max(g2$steps),g2[,interval]]
g2[max(g2$steps),1]
str(g2)
g2[max(g2$steps),1]
g2[max(g2$steps),]
g2$interval
test<-g2[max(g2$steps),]
test$interval
test<-g2[max(g2$steps),interval]
g2[max(g2$steps),g2$interval]
g2$steps
max(g2$steps)
g2[max(g2$steps),]
g2[which(max(g2$steps)),]
g2[g2$steps==max(g2$steps),]
g2[g2$steps==max(g2$steps),g2$interval]
g2[g2$steps==max(g2$steps),1]
g2<-aggregate(data_noNA$steps~as.numeric(as.character(data_noNA$interval)),data=data_noNA,FUN=mean)
#g2<-as.data.frame(tapply(data_noNA$steps,data_noNA$interval,FUN=mean))
names(g2)<-c("interval","steps")
plot(g2$interval, g2$steps, type="l",ylab = "No. of steps", xlab = "5-minute interval")
g2[g2$steps==max(g2$steps),]
sum(is.na(data))
g2
nadata<-data
nadata
head(nadata)
is.na(nadata$steps)
for(i in 1:nrow(nadata))
{
if(is.na(nadata$steps[i]))
{
Print(i)
}
}
for(i in 1:nrow(nadata))
{
if(is.na(nadata$steps[i]))
{
print(i)
}
}
g2[g2$interval,2]
g2
for(i in 1:6)
{
if(is.na(nadata$steps[i]))
{
g2[which(nadata$interval[i]==g2$interval),2]
}
}
is.na(nadata$steps[1:6])
g2[which(nadata$interval[1:6]==g2$interval),2]
for(i in 1:6)
{
if(is.na(nadata$steps[i]))
{
g2[which(nadata$interval[i]==g2$interval),2]
}
}
for(i in 1:6)
{
if(is.na(nadata$steps[i]))
{
print("Hello");g2[which(nadata$interval[i]==g2$interval),2]
}
}
for(i in 1:6)
{
if(is.na(nadata$steps[i]))
{
print(g2[which(nadata$interval[i]==g2$interval),2])
}
}
for(i in 1:nrow(nadata))
{
if(is.na(nadata$steps[i]))
{
nadata$steps[i]<-g2[which(nadata$interval[i]==g2$interval),2]
}
}
nadata
head(nadata)
g2[g2$steps==max(g2$steps),]$interval
data_na<-data
for(i in 1:nrow(data_na))
{
if(is.na(data_na$steps[i]))
{
data_na$steps[i]<-g2[which(data_na$interval[i]==g2$interval),]$steps
}
}
head(data_na)
sum(is.na(data_na))
g3<-aggregate(data_na$steps~data_na$date,data=data_na,FUN=sum)
hist(g3[,1],breaks=20,main=" ",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="steelblue")
g3
g3<-aggregate(data_na$steps~data_na$date,data=data_na,FUN=sum)
hist(g3$steps,breaks=20,main=" ",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="steelblue")
class(g3$steps)
names(g3)
head(data_na)
g3<-as.data.frame(tapply(data_na$steps,data_na$date,FUN=sum))
g3
head(g3)
class(g3)
class(g3[,1])
g3<-as.data.frame(tapply(data_na$steps,data_na$date,FUN=sum))
hist(g3[,1],breaks=20,main=" ",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="steelblue")
hist(g1[,1],breaks=20,main="Missing data",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
aggregate(data_noNA$steps~data_noNA$date,data=data_noNA,FUN=sum)
g<-aggregate(data_noNA$steps~data_noNA$date,data=data_noNA,FUN=sum)
hist(g,breaks=20,main="Missing data",xlab="DATE",ylab="TOTAL STEPS",col="red")
class(g)
names(g)
g[,1]
class(g[,1])
barplot(g[,1],g[,2],main="Missing data",type='l',xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
names(g)<-c("date","steps")
barplot(g$date,g$steps,main="Missing data",type='l',xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
class(g$date)
class(g$steps)
barplot(as.vector(g$date),as.vector(g$steps),main="Missing data",type='l',xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
barplot(as.vector(g$date),as.vector(g$steps),main="Missing data",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
barplot(as.vector(g$steps),as.vector(g$date),main="Missing data",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
barplot(g,main="Missing data",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
barplot(as.matrix(g),main="Missing data",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
barplot(as.vector(g$steps),as.vector(g$date),main="Missing data",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
axis.POSIXct(1, as.POSIXct(g$date, origin="1970-01-01"))
g
as.POSIXct(g$date, origin="1970-01-01")
as.POSIXct(1, as.POSIXct(g$date, origin="1970-01-01"))
as.POSIXct(1, as.POSIXct(g$date, origin="1970-01-01"),origin="1970-01-01")
as.POSIXct(as.POSIXct(g$date, origin="1970-01-01"),origin="1970-01-01")
as.POSIXct(1, as.POSIXct(g$date, origin="1970-01-01"))
axis.POSIXlt(1, as.POSIXct(g$date, origin="1970-01-01"))
axis.date(1, as.POSIXct(g$date, origin="1970-01-01"))
plot(g$steps,g$date,main="Missing data",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
plot(g$steps,g$date,main="Missing data",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red",type='l')
plot(g$date,g$steps,main="Missing data",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red",type='l')
plot(g$date,g$steps,main="Missing data",xlab="Date",ylab="Total steps",col="red",type='b')
plot(g$date,g$steps,main="Missing data",xlab="Date",ylab="Total steps",col="red",type='a')
plot(g$date,g$steps,main="Missing data",xlab="Date",ylab="Total steps",col="red",type='c')
plot(g$date,g$steps,main="Missing data",xlab="Date",ylab="Total steps",col="red",type='d')
plot(g$date,g$steps,main="Missing data",xlab="Date",ylab="Total steps",col="red",type='e')
plot(g$date,g$steps,main="Missing data",xlab="Date",ylab="Total steps",col="red",type='f')
plot(g$date,g$steps,main="Missing data",xlab="Date",ylab="Total steps",col="red",type='g')
plot(g$date,g$steps,main="Missing data",xlab="Date",ylab="Total steps",col="red",type='h')
plot(g$date,g$steps,main="Missing data",xlab="Date",ylab="Total steps",col="red",type='i')
plot(g$date,g$steps,main="Missing data",xlab="Date",ylab="Total steps",col="red",type='j')
plot(g$date,g$steps,main="Missing data",xlab="Date",ylab="Total steps",col="red",type='k')
plot(g$date,g$steps,main="Missing data",xlab="Date",ylab="Total steps",col="red",type='m')
plot(g$date,g$steps,main="Missing data",xlab="Date",ylab="Total steps",col="red",type='n')
plot(g$date,g$steps,main="Missing data",xlab="Date",ylab="Total steps",col="red",type='o')
plot(g$date,g$steps,main="Missing data",xlab="Date",ylab="Total steps",col="red",type='p')
plot(g$date,g$steps,main="Missing data",xlab="Date",ylab="Total steps",col="red",type='q')
plot(g$date,g$steps,main="Missing data",xlab="Date",ylab="Total steps",col="red",type='r')
plot(g$date,g$steps,main="Missing data",xlab="Date",ylab="Total steps",col="red",type='s')
plot(g$date,g$steps,main="Missing data",xlab="Date",ylab="Total steps",col="red",type='t')
plot(g$date,g$steps,main="Missing data",xlab="Date",ylab="Total steps",col="red",type='u')
plot(g$date,g$steps,main="Missing data",xlab="Date",ylab="Total steps",col="red",type='v')
plot(g$date,g$steps,main="Missing data",xlab="Date",ylab="Total steps",col="red",type='w')
plot(g$date,g$steps,main="Missing data",xlab="Date",ylab="Total steps",col="red",type='x')
plot(g$date,g$steps,main="Missing data",xlab="Date",ylab="Total steps",col="red",type='y')
plot(g$date,g$steps,main="Missing data",xlab="Date",ylab="Total steps",col="red",type='z')
plot(g$date,g$steps,main="Missing data",xlab="Date",ylab="Total steps",col="red",type='i')
plot(g$date,g$steps,main="Missing data",xlab="Date",ylab="Total steps",col="red",type='h')
g
hist(g1[,1],breaks=20,main="Missing data",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
hist(g1[,1],breaks=200,main="Missing data",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
g
barplot(as.vector(g$steps),as.vector(g$date),main="Missing data",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
ggplot(g1, aes(date, steps)) + geom_bar(stat = "identity", colour = "steelblue", fill = "steelblue", width = 0.7) + labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
ggplot2(g1, aes(date, steps)) + geom_bar(stat = "identity", colour = "steelblue", fill = "steelblue", width = 0.7) + labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
library(ggplot2)
ggplot(g1, aes(date, steps)) + geom_bar(stat = "identity", colour = "steelblue", fill = "steelblue", width = 0.7) + labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
names(g1)
names(g)
ggplot(g, aes(date, steps)) + geom_bar(stat = "identity", colour = "steelblue", fill = "steelblue", width = 0.7) + labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
ggplot(g, aes(date, steps)) + geom_bar(stat = "identity", colour = "red", fill = "steelblue", width = 0.7) + labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
ggplot(g, aes(date, steps)) + geom_histogram(stat = "identity", colour = "red", fill = "red", width = 0.7) + labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
data <- read.csv("C:/Users/ANUBHAV/Downloads/repdata-data-activity/activity.csv", header=T, quote="\"",colClasses= c("numeric", "Date", "factor"))
data_noNA<-na.omit(data)
#g1<-as.data.frame(tapply(data_noNA$steps,data_noNA$date,FUN=sum))
#hist(g1[,1],breaks=20,main="Missing data",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
g1<-aggregate(data_noNA$steps~data_noNA$date,data=data_noNA,FUN=sum)
names(g1)<-c("date","steps")
#barplot(as.vector(g$steps),as.vector(g$date),main="Missing data",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
ggplot(g, aes(date, steps)) + geom_histogram(stat = "identity", colour = "red", fill = "red", width = 0.7) + labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
mean(g1[,1])
median(g1[,1])
data <- read.csv("C:/Users/ANUBHAV/Downloads/repdata-data-activity/activity.csv", header=T, quote="\"",colClasses= c("numeric", "Date", "factor"))
data_noNA<-na.omit(data)
#g1<-as.data.frame(tapply(data_noNA$steps,data_noNA$date,FUN=sum))
#hist(g1[,1],breaks=20,main="Missing data",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
g1<-aggregate(data_noNA$steps~data_noNA$date,data=data_noNA,FUN=sum)
names(g1)<-c("date","steps")
#barplot(as.vector(g$steps),as.vector(g$date),main="Missing data",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
ggplot(g, aes(date, steps)) + geom_histogram(stat = "identity", colour = "red", fill = "red", width = 0.7) + labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
mean(g1[,2])
median(g1[,2])
data <- read.csv("C:/Users/ANUBHAV/Downloads/repdata-data-activity/activity.csv", header=T, quote="\"",colClasses= c("numeric", "Date", "factor"))
data_noNA<-na.omit(data)
#g1<-as.data.frame(tapply(data_noNA$steps,data_noNA$date,FUN=sum))
#hist(g1[,1],breaks=20,main="Missing data",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
g1<-aggregate(data_noNA$steps~data_noNA$date,data=data_noNA,FUN=sum)
names(g1)<-c("date","steps")
#barplot(as.vector(g$steps),as.vector(g$date),main="Missing data",xlab="Total Number of Steps Taken Daily",ylab="Frequency(No. of days)",col="red")
ggplot(g, aes(date, steps)) + geom_histogram(stat = "identity", colour = "red", fill = "red", width = 0.7) + labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
mean(g1$steps)
median(g1$steps)
g3<-aggregate(data_na$steps~data_na$date,data=data_na,FUN=sum)
g3
names(g3)
g3<-aggregate(data_na$steps~data_na$date,data=data_na,FUN=sum)
#g3<-as.data.frame(tapply(data_na$steps,data_na$date,FUN=sum))
names(g1)<-c("date","steps")
ggplot(g3, aes(date, steps)) + geom_histogram(stat = "identity", colour = "steelblue", fill = "steelblue", width = 0.7) + labs(title = "Histogram of Total Number of Steps Taken Each Day(No missing values)", x = "Date", y = "Total number of steps")
g3<-aggregate(data_na$steps~data_na$date,data=data_na,FUN=sum)
#g3<-as.data.frame(tapply(data_na$steps,data_na$date,FUN=sum))
names(g3)<-c("date","steps")
ggplot(g3, aes(date, steps)) + geom_histogram(stat = "identity", colour = "steelblue", fill = "steelblue", width = 0.7) + labs(title = "Histogram of Total Number of Steps Taken Each Day(No missing values)", x = "Date", y = "Total number of steps")
mean(g3$steps)
median(g3$steps)
newmean<-mean(g3$steps)
newmedian<-median(g3$steps)
newmean-mean(g1$steps)
newmedian-median(g1$steps)
```{r}
unzip("activity.zip")
options(scipen = 1)  # Turn off scientific notations for numbers
```
### Loading and processing the data
```{r}
data <- read.csv("activity.csv", colClasses = c("integer", "Date", "factor"))
data$month <- as.numeric(format(data$date, "%m"))
getwd()
data <- read.csv("activity.csv", colClasses = c("integer", "Date", "factor"))
getwdd()
getwd()
data <- read.csv("activity.csv", colClasses = c("integer", "Date", "factor"))
data <- read.csv("activity.csv", colClasses = c("integer", "Date", "factor"))
data <- read.csv("activity.csv", colClasses = c("integer", "Date", "factor"))
data
data <- read.csv("activity.csv", colClasses = c("integer", "Date", "factor"))
data$month <- as.numeric(format(data$date, "%m"))
noNA <- na.omit(data)
rownames(noNA) <- 1:nrow(noNA)
head(noNA)
dim(noNA)
library(ggplot2)
data <- read.csv("activity.csv", colClasses = c("integer", "Date", "factor"))
data$month <- as.numeric(format(data$date, "%m"))
noNA <- na.omit(data)
rownames(noNA) <- 1:nrow(noNA)
head(noNA)
dim(noNA)
library(ggplot2)
data <- read.csv("activity.csv", colClasses = c("integer", "Date", "factor"))
data$month <- as.numeric(format(data$date, "%m"))
noNA <- na.omit(data)
rownames(noNA) <- 1:nrow(noNA)
head(noNA)
dim(noNA)
library(ggplot2)
data <- read.csv("C:/Users/ANUBHAV/Documents/activity.csv", colClasses = c("integer", "Date", "factor"))
getwd()
data <- read.csv(paste(getwd(),"/activity.csv",sep=""), colClasses = c("integer", "Date", "factor"))
paste(getwd(),"/activity.csv",sep="")
opts_knit$set(root.dir = 'C:/Users/ANUBHAV/Documents')
install.packages("root.dir")
library(knitr)
setwd(getwd())
library(knitr)
library(markdown)
knit("knitr-minimal.Rmd")
knit("C:/Users/ANUBHAV/Desktop/PA1_template.Rmd")
knit("C:/Users/ANUBHAV/Desktop/PA1_template.Rmd")
knit("C:/Users/ANUBHAV/Desktop/PA1_template.Rmd")
knit("C:/Users/ANUBHAV/Documents/PA1_template.md")
knit("C:/Users/ANUBHAV/Desktop/PA1_template.Rmd")
knit("C:/Users/ANUBHAV/Desktop/PA1_template.Rmd")
install.packages(httpuv)
install.packages("httpuv")
install.packages("catools")
install.packages("caTools")
knit("D:\DataScience\Git\RepData_PeerAssessment2\rep_assignment2.rmd")
knit("D:/DataScience/Git/RepData_PeerAssessment2/rep_assignment2.rmd")
knitr("D:/DataScience/Git/RepData_PeerAssessment2/rep_assignment2.rmd")
library(knitr)
knitr("D:/DataScience/Git/RepData_PeerAssessment2/rep_assignment2.rmd")
knit("D:/DataScience/Git/RepData_PeerAssessment2/rep_assignment2.rmd")
dir()
getwd()
?unzip
unzip("repdata-data-StormData.csv.bz2",exdir=getwd())
unzip("repdata-data-StormData.csv.bz2")
unzip("repdata-data-StormData.csv.bz2")
getwd()
unzip("repdata-data-StormData.csv.bz2")
setwd("C:/Users/ANUBHAV/Desktop")
getwd()
unzip("repdata-data-StormData.csv.bz2")
setwd("C:/Users/ANUBHAV/Documents")
unzip("rankall.zip")
bzfile("repdata-data-StormData.csv.bz2")
bunzip2("repdata-data-StormData.csv.bz2", overwrite=T, remove=F)
library(R.utils)
install.packages("R.utils")
library(R.utils)
library(R.utils,silent=TRUE)
?library
library(R.utils,quitely=TRUE)
library(R.utils,quietly=TRUE)
bunzip2("repdata-data-StormData.csv.bz2", overwrite=T, remove=F)
if (!"repdata-data-StormData.csv" %in% dir()){print("Not here")} else {print("here")}
if (!"repdata-data-StormData.csv" %in% dir()){print("Not here")} else {print("here")}
if (!"repdata-data-StormData.csv" %in% dir())
{
bunzip2("repdata-data-StormData.csv.bz2", overwrite=T, remove=F)
}
data<-read.csv(file="repdata-data-StormData.csv",header=TRUE,stringsAsFactor=FALSE)
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2")
if (!"repdata-data-StormData.csv" %in% dir())
{
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2", destfile="repdata-data-StormData.csv.bz2")
bunzip2("repdata-data-StormData.csv.bz2", overwrite=T, remove=F)
}
basename(getwd())
if (!"repdata-data-StormData.csv" %in% dir())
{
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2", destfile="repdata-data-StormData.csv.bz2")
bunzip2("repdata-data-StormData.csv.bz2", overwrite=T, remove=F)
}
data<-read.csv(file="repdata-data-StormData.csv",header=TRUE,stringsAsFactor=FALSE)
getwd()
knit("D:\DataScience\Git\RepData_PeerAssessment2\rep_assignment2.rmd")
knit("D:/DataScience/Git/RepData_PeerAssessment2/rep_assignment2.rmd")
library(knitr)
knit("D:/DataScience/Git/RepData_PeerAssessment2/rep_assignment2.rmd")
knit("D:/DataScience/Git/RepData_PeerAssessment2/rep_assignment2.rmd")
knit("D:/DataScience/Git/RepData_PeerAssessment2/rep_assignment2.rmd")
knit("D:/DataScience/Git/RepData_PeerAssessment2/rep_assignment2.rmd")
knit("D:/DataScience/Git/RepData_PeerAssessment2/rep_assignment2.md")
options(rpubs.upload.method = "internal")
ls()
rm(list=ls())
options(rpubs.upload.method = "internal")
options(RCurlOptions = list(verbose = FALSE, capath = system.file("CurlSSL", "cacert.pem", package = "RCurl"), ssl.verifypeer = FALSE))
getwd()
options(rpubs.upload.method = “internal”)
options(rpubs.upload.method = "internal")
source('C:/Users/ANUBHAV/OneDrive/Documents/.RProfile')
library(grid)
data(mmtcars)
data(mtcars)
data
mtcars
head(mtcars)
?mtcars
require(graphics)
pairs(mtcars, main = "mtcars data")
coplot(mpg ~ disp | as.factor(cyl), data = mtcars,
panel = panel.smooth, rows = 1)
library("lubridate", lib.loc="~/R/win-library/3.1")
install.packages("lubridate")
?lubridate
??lubridate
library("xlsx")
install.packages("xlsx")
data(mtcars)
head(mtcars)
data(diamonds)
data(diamond)
data(Nile)
head(Nile)
str(Nile)
data(euro)
head(euro)
library(ggplot2)
data(diamonds)
head(diamonds)
library(dplyr)
install.packages("stats")
head(diamonds)
?unique
ggplot(data=diamonds,aes(clarity,fill=cut))
ggplot(data=diamonds,aes(clarity,fill=cut)) + geom_bar()
ggplot(data=diamonds,aes(clarity,fill=cut)) + geom_histogram()
ggplot(data=diamonds,aes(clarity,fill=cut)) + geom_bar()
ggplot(data=diamonds,aes(clarity,fill=cut)) + geom_histogram()
ggplot(data=diamonds,aes(clarity,fill=cut)) + geom_bar()
ggplot(data=diamonds,aes(clarity,fill=cut)) + geom_line()
library(sqldf)
library(RODBC)
ch<-odbcConnect("datascience")
ch<-odbcConnect("datascience")
setwd("D:\\DataScience\\Git\\Data_Products\\Code\\Slider")
library(shiny)
runApp()
